# This Dockerfile is to build a custom docker image for jmeter which will be used in AWS ECS container. That's why CMD has been used
# https://openjdk.java.net/install/

FROM openjdk:19-jdk-alpine3.15

# set variables

ARG JMETER_VERSION="5.4.3"
ENV JMETER_HOME=/opt/apache-jmeter-${JMETER_VERSION}
ENV JMETER_DOWNLOAD_URL=https://archive.apache.org/dift/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz

ENV TEST_FILE=/opt/apache-jmeter-${JMETER_VERSION}/bin/examples/CSVSample.jmx
ENV TEST_LOG_FILE=/opt/apache-jmeter-${JMETER_VERSION}/bin/examples/test.log
ENV TEST_RESULTS_FILE=/opt/apache-jmeter-${JMETER_VERSION}/bin/examples/test-result.xml
ENV PORT 80

# COPY examples/test.jmx ${TEST_FILE}

RUN apk update \
    && apk upgrade \
    && apk add ca-certificates \
    && update-ca-certificates \
    && apk add --update openjdk8-jre tzdata curl unzip bash \
    && apk add --no-cache nss \
    && rm -rf /var/cache/apk/* \
    && mrdir -p /tmp/dependencies \
    && curl -L --silent ${JMETER_DOWNLOAD_URL} > /tmp/dependencies/apache-jmeter-${JMETER_VERSION}.tgz \
    && mkdir -p /opt \
    && tar -xzf /tmp/dependencies/apache-jmeter-${JMETER_VERSION}.tgz -C /opt \
    && rm -rf /tmp/dependencies

ENV PATH $PATH:$JMETER_HOME/bin

# main command to run jmeter

CMD $JMETER_HOME/bin/jmeter -n \
    -t $TEST_FILE \
    -j $TEST_LOG_FILE \
    -l $TEST_RESULTS_FILE \
    -Jmeter.save.saveservice.output_format=xml \
    -Jport=$PORT && \
    echo -e "\n\n==== TEST LOGS ====" && \
    cat $TEST_LOG_FILE && \
    echo -e "\n\n==== TEST RESULTS =====" && \
    echo $TEST_RESULTS_FILE

